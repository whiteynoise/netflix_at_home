"""init_tables

Revision ID: 640723fda243
Revises: fbd944cbcb63
Create Date: 2024-12-16 20:53:02.527006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '640723fda243'
down_revision: Union[str, None] = 'fbd944cbcb63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('title'),
    schema='auth'
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_stuff', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', 'email', name='uq_username_email'),
    schema='auth',
    comment='Пользователи'
    )
    op.create_table('login_history',
    sa.Column('log_id', sa.UUID(), nullable=False, comment='UUID лога'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='UUID пользователя'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Активен ли текущий логин'),
    sa.Column('login_date', sa.DateTime(), nullable=False, comment='Дата логина'),
    sa.Column('token', sa.String(length=255), nullable=False, comment='Refresh токен'),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('log_id'),
    schema='auth'
    )
    op.create_table('user_roles',
    sa.Column('user_role_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['auth.roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_role_id'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role'),
    schema='auth'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles', schema='auth')
    op.drop_table('login_history', schema='auth')
    op.drop_table('users', schema='auth')
    op.drop_table('roles', schema='auth')
    # ### end Alembic commands ###
